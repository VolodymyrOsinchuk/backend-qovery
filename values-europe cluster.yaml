qovery:
  clusterId: &clusterId "1b68b17e-a15e-47db-9356-e570bee252b7"
  clusterShortId: &clusterShortId "z1b68b17e"
  organizationId: &organizationId "2eb6b238-196b-4258-9e9f-a283cbc2e149"
  jwtToken: &jwtToken "eyJhbGciOiJIUzUxMiJ9.eyJvcmdhbml6YXRpb24iOiIyZWI2YjIzOC0xOTZiLTQyNTgtOWU5Zi1hMjgzY2JjMmUxNDkiLCJjbHVzdGVyIjoiMWI2OGIxN2UtYTE1ZS00N2RiLTkzNTYtZTU3MGJlZTI1MmI3Iiwicm9vdF9kbnMiOiJydXN0cm9ja3MuY2xvdWQiLCJpYXQiOjE3MzE3MDE5MjN9.5OxrE0LcglTBmvjj-r4WF1R9nOBxXA0oe4IXaV4HZWWZgfXBNuwb2q_pQNUjFIEHMjcDMOARHY0NPdCbpMFfkA"
  rootDomain: &rootDomain "rustrocks.cloud"
  domain: &domain "z1b68b17e.rustrocks.cloud"
  domainWildcard: &domainWildcard "*.z1b68b17e.rustrocks.cloud"
  qoveryDnsUrl: &qoveryDnsUrl "https://ddns.qovery.com"
  agentGatewayUrl: &agentGatewayUrl "https://grpc.qovery.com"
  engineGatewayUrl: &engineGatewayUrl "https://engine.qovery.com"
  lokiUrl: &lokiUrl "http://loki.qovery.svc:3100"
  promtailLokiUrl: &promtailLokiUrl "http://loki.qovery.svc:3100/loki/api/v1/push"
  acmeEmailAddr: &acmeEmailAddr "osinchuk28@live.com"
  externalDnsPrefix: &externalDnsPrefix "qvy-z1b68b17e-"
  architectures: &architectures "AMD64"
  engineVersion: &engineVersion "8198428"
  clusterAgentVersion: &clusterAgentVersion "e304e3cec13b315487b135b0f1068b12b7e7f08f"
  shellAgentVersion: &shellAgentVersion "28ff7be600f7ac2a97d63d7d58c17b468d8669a9"
services:
  qovery:
    qovery-cluster-agent:
      enabled: true
    qovery-shell-agent:
      enabled: true
    qovery-engine:
      enabled: true
    qovery-priority-class:
      enabled: true
  ingress:
    ingress-nginx:
      enabled: true
  dns:
    external-dns:
      enabled: true
  logging:
    loki:
      enabled: false
    promtail:
      enabled: false
  certificates:
    cert-manager:
      enabled: true
    cert-manager-configs:
      enabled: true
    qovery-cert-manager-webhook:
      enabled: true
  observability:
    metrics-server:
      enabled: false
  aws:
    q-storageclass-aws:
      enabled: false
    aws-ebs-csi-driver:
      enabled: false
    aws-load-balancer-controller:
      enabled: false
  gcp:
    q-storageclass-gcp:
      enabled: false
  scaleway:
    q-storageclass-scaleway:
      enabled: false
qovery-cluster-agent:
  fullnameOverride: qovery-shell-agent
  image:
    tag: *clusterAgentVersion
  environmentVariables:
    CLUSTER_ID: *clusterId
    CLUSTER_JWT_TOKEN: *jwtToken
    GRPC_SERVER: *agentGatewayUrl
    LOKI_URL: ''
    ORGANIZATION_ID: *organizationId
  useSelfSignCertificate: true
qovery-shell-agent:
  fullnameOverride: qovery-shell-agent
  image:
    tag: *shellAgentVersion
  environmentVariables:
    CLUSTER_ID: *clusterId
    CLUSTER_JWT_TOKEN: *jwtToken
    GRPC_SERVER: *agentGatewayUrl
    ORGANIZATION_ID: *organizationId
qovery-engine:
  image:
    tag: *engineVersion
  engineResources: null
  buildContainer:
    environmentVariables:
      BUILDER_CPU_ARCHITECTURES: *architectures
      BUILDER_ROOTLESS_ENABLED: 'false'
  environmentVariables:
    CLUSTER_ID: *clusterId
    CLUSTER_JWT_TOKEN: *jwtToken
    DOCKER_HOST: tcp://0.0.0.0:2375
    GRPC_SERVER: *engineGatewayUrl
    LIB_ROOT_DIR: /home/qovery/lib
    ORGANIZATION_ID: *organizationId
ingress-nginx:
  fullnameOverride: ingress-nginx
  controller:
    useComponentLabel: true
    allowSnippetAnnotations: true
    ingressClass: nginx-qovery
    ingressClassResource:
      name: nginx-qovery
    extraArgs:
      default-ssl-certificate: "qovery/letsencrypt-acme-qovery-cert"
    publishService:
      enabled: true
    service:
      enabled: true
      annotations:
        # Qovery managed DNS requieres *.$domain (something like: *.<cluster_id>.<given_dns_name>)
        external-dns.alpha.kubernetes.io/hostname: *domainWildcard
  
external-dns:
  fullnameOverride: external-dns
  provider: pdns
  domainFilters: [*rootDomain]
  txtOwnerId: *clusterShortId
  txtPrefix: *externalDnsPrefix
  pdns:
    apiUrl: *qoveryDnsUrl
    apiKey: *jwtToken
    apiPort: 443
promtail: {}
loki: {}
cert-manager:
  fullnameOverride: cert-manager
  global:
    leaderElection:
      namespace: qovery
  installCRDs: true
  replicaCount: 1
  startupapicheck:
    jobAnnotations:
      helm.sh/hook: post-install,post-upgrade
    rbac:
      annotations:
        helm.sh/hook: post-install,post-upgrade
    serviceAccount:
      annotations:
        helm.sh/hook: post-install,post-upgrade
qovery-cert-manager-webhook:
  fullnameOverride: qovery-cert-manager-webhook
  certManager:
    namespace: qovery
    serviceAccountName: cert-manager
  secret:
    apiUrl: *qoveryDnsUrl
    apiKey: *jwtToken
cert-manager-configs:
  fullnameOverride: cert-manager-configs
  externalDnsProvider: pdns # Qovery DNS
  namespace: "qovery"
  managedDns: [*domain]
  acme:
    letsEncrypt:
      emailReport: *acmeEmailAddr
      # set the Let's Encrypt URL
      # Test: https://acme-staging-v02.api.letsencrypt.org/directory
      # Prod: 
      acmeUrl: https://acme-v02.api.letsencrypt.org/directory
  provider:
    pdns:
      apiPort: "443"
      apiUrl: *qoveryDnsUrl
      apiKey: *jwtToken
